<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>利用termux实现免root的code-server</title>
      <link href="/2024/10/15/%E5%88%A9%E7%94%A8termux%E5%AE%9E%E7%8E%B0%E5%85%8Droot%E7%9A%84code-server/"/>
      <url>/2024/10/15/%E5%88%A9%E7%94%A8termux%E5%AE%9E%E7%8E%B0%E5%85%8Droot%E7%9A%84code-server/</url>
      
        <content type="html"><![CDATA[<p>很多小伙伴由于各种原因无法在自己的安卓设备上获取root权限，从而无法配置chroot容器，不过，虽然没有chroot环境，但我们仍然可以配置一个code-server,以下是配置过程。</p><p>测试机: <strong>华为matepad 11.5s灵动版, Android 12</strong></p><p><img src="/img/2024/10/6/code-server.png" alt="Code-server" title="Code-server">  </p><p align="center">code-server运行截图</p><h2 id="1-硬件要求"><a href="#1-硬件要求" class="headerlink" title="1. 硬件要求"></a>1. <strong>硬件要求</strong></h2><p>一台Android 10及以上系统的手机。</p><h2 id="2-系统要求"><a href="#2-系统要求" class="headerlink" title="2. 系统要求"></a>2. <strong>系统要求</strong></h2><p>已安装 <strong><a href="https://termux.dev/">Termux</a></strong></p><h2 id="3-Termux换源"><a href="#3-Termux换源" class="headerlink" title="3. Termux换源"></a>3. <strong>Termux换源</strong></h2><p><strong>图形界面（TUI）替换</strong></p><p>在较新版的 Termux 中，官方提供了图形界面（TUI）来半自动替换镜像，推荐使用该种方式以规避其他风险。<br>在 Termux 中执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">termux-change-repo</span><br><span class="line">apt update&amp;&amp;apt upgrade</span><br></pre></td></tr></table></figure><p>在图形界面引导下，使用自带方向键可上下移动。<br>第一步使用空格选择需要更换的仓库，之后在第二步选择国内镜像源，如清华大学开源镜像站。确认无误后回车，镜像源会自动完成更换。</p><h2 id="4-安装Node-js"><a href="#4-安装Node-js" class="headerlink" title="4. 安装Node.js"></a>4. <strong>安装Node.js</strong></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apt install -y \</span><br><span class="line">  build-essential \</span><br><span class="line">  binutils \</span><br><span class="line">  pkg-config \</span><br><span class="line">  python3 \</span><br><span class="line">  nodejs-lts</span><br></pre></td></tr></table></figure><h2 id="5-安装code-server"><a href="#5-安装code-server" class="headerlink" title="5. 安装code-server"></a>5. <strong>安装code-server</strong></h2><p>配置android_ndk_path</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/../usr/etc/bash.bashrc</span><br></pre></td></tr></table></figure><p>加入一行如下内容并保存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> GYP_DEFINES=<span class="string">&quot;android_ndk_path=&#x27;&#x27;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> NODE_OPTIONS=<span class="string">&quot;--require /data/data/com.termux/files/home/android-as-linux.js&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> EXTENSIONS_GALLERY=<span class="string">&#x27;&#123;&quot;serviceUrl&quot;: &quot;https://marketplace.visualstudio.com/_apis/public/gallery&quot;,&quot;itemUrl&quot;: &quot;https://marketplace.visualstudio.com/items&quot;&#125;&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>第一个环境变量是为了顺利通过code-server的编译</p><p>第二个则是将termux伪装成Linux</p><p>第三个是替换code-server的marketplace为微软官方marketplace</p><p>创建android-as-linux.js</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/android-as-linux.js</span><br><span class="line">vim ~/android-as-linux.js</span><br></pre></td></tr></table></figure><p>输入如下内容并保存</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// android-as-linux.js</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(process, <span class="string">&quot;platform&quot;</span>, &#123;</span><br><span class="line">  <span class="title function_">get</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;linux&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>应用环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ~/../usr/etc/bash.bashrc</span><br></pre></td></tr></table></figure><p>安装<a href="https://github.com/coder/code-server">code-server</a></p><p>注意⚠️:此操作可能需要梯子🪜，请自备</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --global code-server</span><br></pre></td></tr></table></figure><h2 id="6-配置code-server"><a href="#6-配置code-server" class="headerlink" title="6.配置code-server"></a>6.<strong>配置code-server</strong></h2><ol><li><p>先启动code-server以自动创建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code-server</span><br></pre></td></tr></table></figure></li><li><p>修改code-server监听地址和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.config/code-server/config.yaml</span><br></pre></td></tr></table></figure><p>改为如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bind-addr: 0.0.0.0:8080 //0.0.0.0是允许局域网设备访问的ip地址</span><br><span class="line">auth: none //无密码，不建议为它设置密码，由于使用环境较为安全，密码没有什么意义</span><br><span class="line">cert: false //无加密，局域网SSL证书过于麻烦</span><br></pre></td></tr></table></figure></li><li><p>启动code-server并用浏览器访问</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code-server</span><br></pre></td></tr></table></figure><p> 此时可以在本机浏览器测试，输入localhost:8080即可</p><p> 其他局域网设备则输入ip:8080</p></li><li><p>(可选)配置Chrome&#x2F;Edge浏览器以完全启用网页端code-server功能<br> 访问Chrome:&#x2F;&#x2F;flags或Edge:&#x2F;&#x2F;flags，并搜索Insecure origins treated as secure，在下面输入http:&#x2F;&#x2F;<span></span>ip:8080，此后再访问就不会提示不安全和部分js脚本无法正常执行</p></li><li><p>具体vscode的配置过程这里暂时不介绍了</p></li></ol><h2 id="7-设置一键启动脚本"><a href="#7-设置一键启动脚本" class="headerlink" title="7.设置一键启动脚本"></a>7.<strong>设置一键启动脚本</strong></h2><p>Termux有一个好用的插件，叫作 <a href="https://f-droid.org/zh_Hant/packages/com.termux.widget/">Termux:Widget</a>,这个插件可以在桌面创建启动脚本的快捷方式，按如下步骤操作</p><ol><li><p>先安装<a href="https://f-droid.org/zh_Hant/packages/com.termux.widget/">Termux:Widget</a></p></li><li><p>为Termux授权 [显示在其他应用上方] 权限</p></li><li><p>编辑启动脚本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /data/local/tmp/Code-Server</span><br></pre></td></tr></table></figure></li><li><p>将 busybox chroot $UBUNTUPATH &#x2F;bin&#x2F;su - root 中的root改成你的用户名。</p></li><li><p>新建快捷方式脚本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/.shortcuts/Code-Server</span><br><span class="line"><span class="built_in">chmod</span> +x ~/.shortcuts/Code-Server</span><br><span class="line">vim ~/.shortcuts/Code-Server</span><br></pre></td></tr></table></figure><p> 填入如下内容</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code-server</span><br></pre></td></tr></table></figure></li><li><p>修复shebang以便termux:widget能够识别</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-fix-shebang ~/bin/code-server</span><br></pre></td></tr></table></figure></li><li><p>回到手机桌面，拖动Termux:Widget小部件到桌面</p></li></ol><h2 id="8-参考资料"><a href="#8-参考资料" class="headerlink" title="8. 参考资料"></a>8. <strong>参考资料</strong></h2><p><a href="https://github.com/coder/code-server">code-server</a></p><p><a href="https://www.cnblogs.com/mcayear/p/18407607">termux 使用 npm 拉取出现 gyp: Undefined variable android_ndk_path in binding.gyp while trying to load binding.gyp</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Termux </tag>
            
            <tag> code-server </tag>
            
            <tag> 随身IDE </tag>
            
            <tag> 集成开发环境 </tag>
            
            <tag> 移动开发工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在手机上打造随身开发环境：Termux与code-server的完美结合</title>
      <link href="/2024/10/06/%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%8A%E6%89%93%E9%80%A0%E9%9A%8F%E8%BA%AB%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9ATermux%E4%B8%8Ecode-server%E7%9A%84%E5%AE%8C%E7%BE%8E%E7%BB%93%E5%90%88/"/>
      <url>/2024/10/06/%E5%9C%A8%E6%89%8B%E6%9C%BA%E4%B8%8A%E6%89%93%E9%80%A0%E9%9A%8F%E8%BA%AB%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%EF%BC%9ATermux%E4%B8%8Ecode-server%E7%9A%84%E5%AE%8C%E7%BE%8E%E7%BB%93%E5%90%88/</url>
      
        <content type="html"><![CDATA[<p>在使用 <strong>Linux Deploy</strong> 配置Chroot环境时，我发现虽然它提供了便利，但其长期无人维护的问题逐渐显露出来。可选的 <strong>Linux</strong> 发行版过于老旧，导致一些功能失效，且细节设置也不尽人意。为了解决这些问题，我决定转向 <strong>Termux</strong> 来配置Chroot环境。这样一来，我不仅能够使用更新的发行版，还能进行更加精细的设置，从而打造出一个更符合我需求的 <strong>Chroot</strong> 环境。</p><p>本文以 <strong>Ubuntu 24.04.1 LTS</strong> 为例，建立了一个安装了 <strong>code-server</strong> 的 Chroot 容器，文末会提供一键启动脚本。</p><p>测试机: <strong>Oneplus 9, Android 14</strong></p><p><img src="/img/2024/10/6/code-server.png" alt="Code-server" title="Code-server">  </p><p align="center">code-server运行截图</p><h2 id="1-硬件要求"><a href="#1-硬件要求" class="headerlink" title="1. 硬件要求"></a>1. <strong>硬件要求</strong></h2><p>一台Android 10及以上系统的手机。</p><h2 id="2-系统要求"><a href="#2-系统要求" class="headerlink" title="2. 系统要求"></a>2. <strong>系统要求</strong></h2><ol><li>手机已刷入<a href="https://topjohnwu.github.io/Magisk/">Magisk</a>、<a href="https://kernelsu.org/">KernelSU</a>以及 <a href="https://apatch.dev/">Apatch</a>中的任何一种。</li><li>已安装 <strong><a href="https://termux.dev/">Termux</a></strong></li></ol><h2 id="3-Termux换源"><a href="#3-Termux换源" class="headerlink" title="3. Termux换源"></a>3. <strong>Termux换源</strong></h2><p><strong>图形界面（TUI）替换</strong></p><p>在较新版的 Termux 中，官方提供了图形界面（TUI）来半自动替换镜像，推荐使用该种方式以规避其他风险。<br>在 Termux 中执行如下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">termux-change-repo</span><br></pre></td></tr></table></figure><p>在图形界面引导下，使用自带方向键可上下移动。<br>第一步使用空格选择需要更换的仓库，之后在第二步选择国内镜像源，如清华大学开源镜像站。确认无误后回车，镜像源会自动完成更换。</p><h2 id="4-安裝Ubuntu-Chroot環境"><a href="#4-安裝Ubuntu-Chroot環境" class="headerlink" title="4. 安裝Ubuntu Chroot環境"></a>4. <strong>安裝Ubuntu Chroot環境</strong></h2><ol><li><p>开启Termux，并安装<strong>tsu</strong></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">apt update</span><br><span class="line">apt install tsu</span><br></pre></td></tr></table></figure></li><li><p>切换到su shell</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su</span><br></pre></td></tr></table></figure></li><li><p>选择&#x2F;data&#x2F;local&#x2F;tmp创建chroot目录</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /data/local/tmp/Ubuntu</span><br><span class="line"><span class="built_in">cd</span> /data/local/tmp/Ubuntu</span><br></pre></td></tr></table></figure><p> &#x2F;data&#x2F;local&#x2F;tmp目录的权限问题最少，故选择此目录</p></li><li><p>下载Ubuntu 24.04.1 base系统的rootfs压缩包</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirror.tuna.tsinghua.edu.cn/ubuntu-cdimage/ubuntu-base/releases/24.04.1/release/ubuntu-base-24.04.1-base-arm64.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压并建立&#x2F;sdcard的共享点</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tar xpvf ubuntu-base-24.04.1-base-arm64.tar.gz --numeric-owner</span><br><span class="line"><span class="built_in">mkdir</span> sdcard</span><br><span class="line"><span class="built_in">cd</span> ..</span><br></pre></td></tr></table></figure></li><li><p>新建chroot启动脚本: </p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi Ubuntu.sh</span><br></pre></td></tr></table></figure><p>并填入以下内容：</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Ubuntu所在目录</span></span><br><span class="line">UBUNTUPATH=<span class="string">&quot;/data/local/tmp/Ubuntu&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 解决setuid问题</span></span><br><span class="line">busybox mount -o remount,dev,suid /data</span><br><span class="line"></span><br><span class="line">busybox mount --<span class="built_in">bind</span> /dev <span class="variable">$UBUNTUPATH</span>/dev</span><br><span class="line">busybox mount --<span class="built_in">bind</span> /sys <span class="variable">$UBUNTUPATH</span>/sys</span><br><span class="line">busybox mount --<span class="built_in">bind</span> /proc <span class="variable">$UBUNTUPATH</span>/proc</span><br><span class="line">busybox mount -t devpts devpts <span class="variable">$UBUNTUPATH</span>/dev/pts</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载内部存储空间</span></span><br><span class="line">busybox mount --<span class="built_in">bind</span> /sdcard <span class="variable">$UBUNTUPATH</span>/sdcard</span><br><span class="line"></span><br><span class="line"><span class="comment"># chroot至Ubuntu</span></span><br><span class="line">busybox <span class="built_in">chroot</span> <span class="variable">$UBUNTUPATH</span> /bin/su - root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 取消挂载</span></span><br><span class="line">busybox umount <span class="variable">$UBUNTUPATH</span>/dev/pts</span><br><span class="line">busybox umount <span class="variable">$UBUNTUPATH</span>/dev</span><br><span class="line">busybox umount <span class="variable">$UBUNTUPATH</span>/proc</span><br><span class="line">busybox umount <span class="variable">$UBUNTUPATH</span>/sys</span><br><span class="line">busybox umount <span class="variable">$UBUNTUPATH</span>/sdcard</span><br></pre></td></tr></table></figure></li><li><p>授予脚本执行权限</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x Ubuntu.sh</span><br></pre></td></tr></table></figure></li><li><p>进入chroot</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sh Ubuntu.sh</span><br></pre></td></tr></table></figure></li><li><p>设置dns和主机名</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设置AliDNS</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;nameserver 223.5.5.5&quot;</span> &gt; /etc/resolv.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;127.0.0.1 localhost&quot;</span> &gt; /etc/hosts</span><br></pre></td></tr></table></figure></li><li><p>授予socket权限以便chroot容器联网</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">groupadd -g 3003 aid_inet</span><br><span class="line">groupadd -g 3004 aid_net_raw</span><br><span class="line">groupadd -g 1003 aid_graphics</span><br><span class="line">usermod -g 3003 -G 3003,3004 -a _apt</span><br><span class="line">usermod -G 3003 -a root</span><br></pre></td></tr></table></figure></li><li><p>更新Ubuntu软件源和系统并更换镜像源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /dev/null &gt; /etc/apt/sources.list</span><br><span class="line"></span><br><span class="line"><span class="built_in">touch</span> /etc/apt/sources.list.d/debian.sources</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;</span></span><br><span class="line"><span class="string">Types: deb</span></span><br><span class="line"><span class="string">Types: deb</span></span><br><span class="line"><span class="string">URIs: https://mirrors.tuna.tsinghua.edu.cn/ubuntu</span></span><br><span class="line"><span class="string">Suites: noble noble-updates noble-backports</span></span><br><span class="line"><span class="string">Components: main restricted universe multiverse</span></span><br><span class="line"><span class="string">Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Types: deb</span></span><br><span class="line"><span class="string">URIs: http://security.ubuntu.com/ubuntu/</span></span><br><span class="line"><span class="string">Suites: noble-security</span></span><br><span class="line"><span class="string">Components: main restricted universe multiverse</span></span><br><span class="line"><span class="string">Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg</span></span><br><span class="line"><span class="string">&#x27;</span> &gt; /etc/apt/sources.list.d/ubuntu.sources</span><br><span class="line"></span><br><span class="line">apt update&amp;&amp;apt upgrade -y</span><br><span class="line">apt install vim net-tools <span class="built_in">sudo</span> git</span><br></pre></td></tr></table></figure></li><li><p>新增普通用户及本地化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 设定时区为中国上海</span></span><br><span class="line"><span class="built_in">ln</span> -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改root密码</span></span><br><span class="line">passwd root</span><br><span class="line"></span><br><span class="line"><span class="comment"># 新增普通用户</span></span><br><span class="line">groupadd storage</span><br><span class="line">groupadd wheel</span><br><span class="line">useradd -m -g <span class="built_in">users</span> -G wheel,audio,video,storage,aid_inet -s /bin/bash user</span><br><span class="line">passwd user</span><br><span class="line"></span><br><span class="line"><span class="comment"># 編輯：vim /etc/sudoers，在root ALL=(ALL) ALL的下一行加入以下內容:</span></span><br><span class="line">user    ALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到普通用户</span></span><br><span class="line">su user</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装locales并切换为简体中文</span></span><br><span class="line"><span class="built_in">sudo</span> apt install locales</span><br><span class="line"><span class="built_in">sudo</span> locale-gen zh_CN.UTF-8</span><br></pre></td></tr></table></figure></li><li><p>卸载并禁止Snap</p><p>卸载snap</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt autopurge snapd</span><br></pre></td></tr></table></figure><p>禁止snap安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &lt;&lt;<span class="string">EOF | sudo tee /etc/apt/preferences.d/nosnap.pref</span></span><br><span class="line"><span class="string"># To prevent repository packages from triggering the installation of Snap,</span></span><br><span class="line"><span class="string"># this file forbids snapd from being installed by APT.</span></span><br><span class="line"><span class="string"># For more information: https://linuxmint-user-guide.readthedocs.io/en/latest/snap.html</span></span><br><span class="line"><span class="string">Package: snapd</span></span><br><span class="line"><span class="string">Pin: release a=*</span></span><br><span class="line"><span class="string">Pin-Priority: -10</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure></li><li><p>设置一键启动脚本</p><p>Termux有一个好用的插件，叫作 <a href="https://f-droid.org/zh_Hant/packages/com.termux.widget/">Termux:Widget</a>,这个插件可以在桌面创建启动脚本的快捷方式，按如下步骤操作</p><ol><li><p>退出chroot环境</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">exit</span><br></pre></td></tr></table></figure></li><li><p>先安装<a href="https://f-droid.org/zh_Hant/packages/com.termux.widget/">Termux:Widget</a></p></li><li><p>为Termux授权 [显示在其他应用上方] 权限</p></li><li><p>编辑chroot启动脚本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vim /data/local/tmp/Ubuntu.sh</span><br></pre></td></tr></table></figure></li><li><p>将 busybox chroot $UBUNTUPATH &#x2F;bin&#x2F;su - root 中的root改成你的用户名。</p></li><li><p>新建快捷方式脚本</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> ~/.shortcuts/Ubuntu</span><br><span class="line"><span class="built_in">chmod</span> +x ~/.shortcuts/Ubuntu</span><br><span class="line">vim ~/.shortcuts/Ubuntu</span><br></pre></td></tr></table></figure><p> 填入如下内容</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="built_in">export</span> ASH_STANDALONE=1</span><br><span class="line"></span><br><span class="line">su -c cmd wifi force-low-latency-mode enabled</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;启用Wi-Fi低延迟模式&quot;</span></span><br><span class="line">su -c busybox mount --<span class="built_in">bind</span> <span class="variable">$PREFIX</span>/tmp /data/local/tmp/ubuntu/tmp</span><br><span class="line"></span><br><span class="line">su -c <span class="string">&quot;sh /data/local/tmp/startu.sh&quot;</span></span><br><span class="line">su -c cmd wifi force-low-latency-mode disabled</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;禁用Wi-Fi低延迟模式&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>回到手机桌面，拖动Termux:Widget小部件到桌面</p></li></ol></li></ol><h2 id="5-安装code-server"><a href="#5-安装code-server" class="headerlink" title="5. 安装code-server"></a>5. <strong>安装code-server</strong></h2><ol><li><p>安装<a href="https://github.com/coder/code-server">code-server</a></p><p> 进入chroot，执行如下命令，若curl报错请确定自己是否开启了科学上网工具，这里暂不介绍其如何使用</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://code-server.dev/install.sh | sh</span><br></pre></td></tr></table></figure></li><li><p>先启动code-server以自动创建配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code-server</span><br></pre></td></tr></table></figure></li><li><p>配置code-server使用微软官方marketplace</p><p>由于微软的用户政策使得开源版本的code都不被允许使用微软官方的插件商城，导致开源版本的code只能使用开源的marketplace，其中很多插件版本过旧，无法使用，因此我在这里附上如何修改内置的marketplace</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line">//sudo vim /etc/profile //修改这个文件也可以</span><br></pre></td></tr></table></figure><p>向文件中插入一行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> EXTENSIONS_GALLERY = <span class="string">&quot;&#123;&quot;</span>serviceUrl<span class="string">&quot;: &quot;</span>https://marketplace.visualstudio.com/_apis/public/gallery<span class="string">&quot;,&quot;</span>itemUrl<span class="string">&quot;: &quot;</span>https://marketplace.visualstudio.com/items<span class="string">&quot;&#125;&quot;</span> </span><br></pre></td></tr></table></figure></li><li><p>修改code-server监听地址和密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim ~/.config/code-server/config.yaml</span><br></pre></td></tr></table></figure><p>改为如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bind-addr: 0.0.0.0:8080 //0.0.0.0是允许局域网设备访问的ip地址</span><br><span class="line">auth: none //无密码，不建议为它设置密码，由于使用环境较为安全，密码没有什么意义</span><br><span class="line">cert: false //无加密，局域网SSL证书过于麻烦</span><br></pre></td></tr></table></figure></li><li><p>启动code-server并用浏览器访问</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code-server</span><br></pre></td></tr></table></figure><p> 此时可以在本机浏览器测试，输入localhost:8080即可</p><p> 其他局域网设备则输入ip:8080</p></li><li><p>(可选)配置Chrome&#x2F;Edge浏览器以完全启用网页端code-server功能<br> 访问Chrome:&#x2F;&#x2F;flags或Edge:&#x2F;&#x2F;flags，并搜索Insecure origins treated as secure，在下面输入http:&#x2F;&#x2F;<span></span>ip:8080，此后再访问就不会提示不安全和部分js脚本无法正常执行</p></li><li><p>具体vscode的配置过程这里暂时不介绍了</p></li></ol><h2 id="6-安全退出和删除Chroot环境"><a href="#6-安全退出和删除Chroot环境" class="headerlink" title="6. 安全退出和删除Chroot环境"></a>6. <strong>安全退出和删除Chroot环境</strong></h2><ol><li>退出chroot环境<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure></li><li>如何安全删除chroot环境<br>请务必在exit后并确定取消挂载一切chroot相关目录后删除chroot文件夹，本例中文件夹在&#x2F;data&#x2F;local&#x2F;tmp&#x2F;Ubuntu，否则可能会导致&#x2F;sdcard甚至系统文件被删除，最稳妥的方式是重启后删除，重启后所有挂载都会重置</li></ol><h2 id="7-参考资料"><a href="#7-参考资料" class="headerlink" title="7. 参考资料"></a>7. <strong>参考资料</strong></h2><p><a href="https://ivonblog.com/posts/termux-chroot-ubuntu/#7-%E8%A8%AD%E5%AE%9A%E4%B8%80%E9%8D%B5%E5%95%9F%E5%8B%95%E6%8C%87%E4%BB%A4%E7%A8%BF">[Root] 手機Termux建立chroot Ubuntu環境，免Linux Deploy · Ivon的部落格</a></p><p><a href="https://github.com/coder/code-server">code-server</a></p>]]></content>
      
      
      <categories>
          
          <category> 技术教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Termux </tag>
            
            <tag> code-server </tag>
            
            <tag> 随身IDE </tag>
            
            <tag> 集成开发环境 </tag>
            
            <tag> 移动开发工具 </tag>
            
            <tag> Chroot </tag>
            
            <tag> Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
